var DomainSearch, EmailFinder, LeadButton, ListSelection, displayError;

DomainSearch = function() {
  return {
    department_names: {
      executive: "Executive",
      it: "IT / Engineering",
      finance: "Finance",
      management: "Management",
      sales: "Sales",
      legal: "Legal",
      support: "Support",
      hr: "Human Resources",
      marketing: "Marketing",
      communication: "Communication"
    },
    launch: function() {
      this.domain = window.domain;
      this.trial = typeof window.api_key === "undefined" || window.api_key === "";
      Analytics.trackEvent('Open browser popup');
      return this.fetch();
    },
    fetch: function() {
      var _this;
      _this = this;
      _this.cleanSearchResults();
      _this.department = _this.departmentFilter();
      return $.ajax({
        url: Api.domainSearch(_this.domain, _this.department, window.api_key),
        headers: {
          'Email-Hunter-Origin': 'chrome_extension'
        },
        type: 'GET',
        data: {
          format: 'json'
        },
        dataType: 'json',
        jsonp: false,
        error: function(xhr) {
          $('.search-placeholder').hide();
          if (xhr.status === 400) {
            return displayError('Sorry, something went wrong on the query.');
          } else if (xhr.status === 401) {
            return $('.connect-again-container').show();
          } else if (xhr.status === 403) {
            $('#domain-search').hide();
            return $('#blocked-notification').show();
          } else if (xhr.status === 429) {
            if (!_this.trial) {
              return Account.returnRequestsError(function(e) {
                return displayError(e);
              });
            } else {
              return $('.connect-container').show();
            }
          } else {
            return displayError(DOMPurify.sanitize(xhr.responseJSON["errors"][0]["details"]));
          }
        },
        success: function(result) {
          _this.webmail = result.data.webmail;
          _this.pattern = result.data.pattern;
          _this.organization = result.data.organization;
          _this.results = result.data.emails;
          _this.results_count = result.meta.results;
          _this.offset = result.meta.offset;
          _this.type = result.meta.params.type;
          $(".search-placeholder").hide();
          if (_this.trial) {
            $('#full-name-field').hide();
          }
          -(!(_this.trial || _this.department || _this.results_count === 0) ? _this.getDepartments() : void 0);
          return _this.render();
        }
      });
    },
    getDepartments: function() {
      var _this;
      _this = this;
      return $.ajax({
        url: Api.emailCount(_this.domain),
        headers: {
          'Email-Hunter-Origin': 'chrome_extension'
        },
        type: 'GET',
        data: {
          format: 'json'
        },
        dataType: 'json',
        success: function(result) {
          var departments_content, template;
          _this.departments = Utilities.sortObject(result.data.department);
          Handlebars.registerHelper('ifGreaterThanZero', function(count, options) {
            if (count > 0) {
              return options.fn(this);
            }
            return options.inverse(this);
          });
          Handlebars.registerHelper('departmentName', function(options) {
            return new Handlebars.SafeString(_this.department_names[options.fn(this)]);
          });
          template = JST["src/browser_action/templates/departments.hbs"];
          departments_content = $(template(_this));
          $('.departments-container').html(departments_content);
          $('.departments-container').show();
          $(".more-departments-button").on("click", function() {
            $('.departments-container div').css({
              display: "inline-block"
            });
            return $(this).hide();
          });
          return _this.manageDepartmentFilters();
        }
      });
    },
    render: function() {
      var emailFinder, remaining_results, s;
      if (this.webmail === true) {
        $(".webmail-container .domain").text(this.domain);
        $(".webmail-container").show();
        return;
      }
      if (this.results_count === 0) {
        $(".no-result-container .domain").text(this.domain);
        $(".no-result-container").show();
        return;
      }
      $('#current-domain').text(this.domain);
      if (!this.trial) {
        $('#complete-search').attr('href', 'https://hunter.io/search/' + this.domain + '?utm_source=chrome_extension&utm_medium=chrome_extension&utm_campaign=extension&utm_content=browser_popup');
        $('#complete-search').show();
      } else {
        $('#signup-cta').show();
      }
      if (this.results_count === 1) {
        s = '';
      } else {
        s = 's';
      }
      $('#results-number').html(DOMPurify.sanitize(Utilities.numberWithCommas(this.results_count)) + ' result' + s + ' for <strong>' + DOMPurify.sanitize(this.domain) + '</strong>');
      if (this.pattern !== null) {
        $(".people-search-container").show();
        $(".domain-pattern strong").html(this.addPatternTitle(this.pattern) + "@" + this.domain);
        $("[data-toggle='tooltip']").tooltip();
        emailFinder = new EmailFinder;
        emailFinder.validateForm();
      }
      this.loadAccountInformation();
      countCall();
      this.feedbackNotification();
      this.showResults();
      $("body").css({
        height: "auto"
      });
      if (this.results_count > 10) {
        remaining_results = this.results_count - 10;
        return $('.search-results').append('<a class="see-more btn-white" target="_blank" href="https://hunter.io/search/' + DOMPurify.sanitize(this.domain) + '?utm_source=chrome_extension&utm_medium=chrome_extension&utm_campaign=extension&utm_content=browser_popup">See all the results (' + DOMPurify.sanitize(Utilities.numberWithCommas(remaining_results)) + ' more) <i class="far fa-external-link"></i></a>');
      }
    },
    showResults: function() {
      var _this;
      _this = this;
      this.results.slice(0, 10).forEach(function(result) {
        var lead, result_tag, save_lead_button, template;
        if (result.sources.length === 1) {
          result.sources_link = "1 source";
        } else if (result.sources.length >= 20) {
          result.sources_link = "20+ sources";
        } else {
          result.sources_link = result.sources.length + " sources";
        }
        if (result.confidence < 30) {
          result.confidence_score_class = "low-score";
        } else if (result.confidence >= 70) {
          result.confidence_score_class = "high-score";
        } else {
          result.confidence_score_class = "average-score";
        }
        if (!_this.trial) {
          result.lead_button = "<button class='save_lead_button action_lead_button round' data-toggle='tooltip' data-placement='top' title='Save the lead'><i class='fas fa-plus'></i></button>";
        } else {
          result.lead_button = "";
        }
        if (result.first_name !== null && result.last_name !== null) {
          result.additional_data = "<div class='additional-data'>";
          result.additional_data += "<span class='name'>" + DOMPurify.sanitize(result.first_name) + " " + DOMPurify.sanitize(result.last_name) + "</span>";
          if (result.position !== null) {
            result.additional_data += "<span class='position'>" + DOMPurify.sanitize(result.position) + "</span>";
          }
          if (result.linkedin !== null) {
            result.additional_data += "<a class='fab fa-linkedin-square' href='" + DOMPurify.sanitize(result.linkedin) + "' target='_blank' rel='nofollow'></a>";
          }
          if (result.twitter !== null) {
            result.additional_data += "<a class='fab fa-twitter-square' href='https://twitter.com/" + DOMPurify.sanitize(result.twitter) + "' target='_blank' rel='nofollow'></a>";
          }
          if (result.phone_number !== null) {
            result.additional_data += "<span class='phone'>" + DOMPurify.sanitize(result.phone_number) + "</span>";
          }
          result.additional_data += "</div>";
        } else if (result.position !== null) {
          result.additional_data = "<div class='additional-data no-entity'><span class='position'>" + DOMPurify.sanitize(result.position) + "</span></div>";
        } else if (result.department !== null) {
          result.additional_data = "<div class='additional-data no-entity'><span class='department'>" + DOMPurify.sanitize(_this.department_names[result.department]) + "</span></div>";
        } else {
          result.additional_data = "";
        }
        Handlebars.registerHelper('userDate', function(options) {
          return new Handlebars.SafeString(Utilities.dateInWords(options.fn(this)));
        });
        Handlebars.registerHelper('ifIsVerified', function(confidence, options) {
          if (confidence >= 95) {
            return options.fn(this);
          }
          return options.inverse(this);
        });
        template = JST["src/browser_action/templates/search_results.hbs"];
        result_tag = $(template(result));
        $('.search-results').append(result_tag);
        save_lead_button = result_tag.find(".save_lead_button");
        save_lead_button.data({
          email: result.value
        });
        lead = new LeadButton;
        lead.saveButtonListener(save_lead_button);
        lead.disableSaveLeadButtonIfLeadExists(save_lead_button);
        return result_tag.find('.email').html(result_tag.find('.email').text().replace('**', '<span data-toggle="tooltip" data-placement="top" title="Please sign up to uncover the email addresses">aa</span>'));
      });
      this.openSources();
      $(".search-results").show();
      $('[data-toggle="tooltip"]').tooltip();
      if (_this.trial) {
        return $(".verification-link, .verification-result, .copy-status, .email-copied").remove();
      } else {
        this.searchVerificationListener();
        return Utilities.copyEmailListener();
      }
    },
    searchVerificationListener: function() {
      var _this;
      _this = this;
      return $(".verification-link").unbind("click").click(function() {
        var email, verification_link_tag, verification_result_tag;
        verification_link_tag = $(this);
        verification_result_tag = $(this).parent().find(".verification-result");
        verification_link_tag.remove();
        verification_result_tag.html("<div class='light-grey'> <i class='fas fa-spin fa-spinner-third'></i> Verifying... </div>").css({
          display: "inline-block"
        });
        email = verification_link_tag.data("email");
        return $.ajax({
          url: Api.emailVerifier(email, window.api_key),
          headers: {
            'Email-Hunter-Origin': 'chrome_extension'
          },
          type: 'GET',
          data: {
            format: 'json'
          },
          dataType: 'json',
          jsonp: false,
          error: function(xhr, statusText, err) {
            verification_result_tag.html("");
            verification_link_tag.show();
            if (xhr.status === 400) {
              return displayError('Sorry, something went wrong on the query.');
            } else if (xhr.status === 401) {
              return $('.connect-again-container').show();
            } else if (xhr.status === 403) {
              $('#domain-search').hide();
              return $('#blocked-notification').show();
            } else if (xhr.status === 429) {
              if (!_this.trial) {
                return Account.returnRequestsError(function(e) {
                  return displayError(e);
                });
              } else {
                return $('.connect-container').show();
              }
            } else {
              return displayError(DOMPurify.sanitize(xhr.responseJSON["errors"][0]["details"]));
            }
          },
          success: function(result, statusText, xhr) {
            if (xhr.status === 202) {
              verification_result_tag.html("<div class='dark-orange'> <i class='fa fa-exclamation-triangle'></i> <a href='https://hunter.io/verify/" + (DOMPurify.sanitize(email)) + "' target='_blank' title='Click to retry the verification'>Retry</a> </div>");
              displayError('The email verification is taking longer than expected. Please try again later.');
            } else if (xhr.status === 222) {
              verification_result_tag.html("");
              displayError(DOMPurify.sanitize(result.errors[0].details));
              return;
            } else {
              if (result.data.result === "deliverable") {
                verification_result_tag.html("<div class='green'> <i class='fa fa-check'></i> <a href='https://hunter.io/verify/" + (DOMPurify.sanitize(email)) + "' target='_blank' title='Click to see the complete check result'>Deliverable</a> </div>");
              } else if (result.data.result === "risky") {
                verification_result_tag.html("<div class='dark-orange'> <i class='fa fa-exclamation-triangle'></i> <a href='https://hunter.io/verify/" + (DOMPurify.sanitize(email)) + "' target='_blank' title='Click to see the complete check result'>Accept all</a> </div>");
              } else {
                verification_result_tag.html("<div class='red'> <i class='fa fa-times'></i> <a href='https://hunter.io/verify/" + (DOMPurify.sanitize(email)) + "' target='_blank' title='Click to see the complete check result'>Undeliverable</a> </div>");
              }
            }
            verification_result_tag.parent().find(".copy-status").remove();
            return _this.loadAccountInformation();
          }
        });
      });
    },
    openSources: function() {
      return $(".sources-link").unbind("click").click(function(e) {
        if ($(this).parent().parent().parent().find(".sources-list").is(":visible")) {
          $(this).parent().parent().parent().find(".sources-list").slideUp(300);
          return $(this).find(".fa-angle-up").removeClass("fa-angle-up").addClass("fa-angle-down");
        } else {
          $(this).parent().parent().parent().find(".sources-list").slideDown(300);
          return $(this).find(".fa-angle-down").removeClass("fa-angle-down").addClass("fa-angle-up");
        }
      });
    },
    manageDepartmentFilters: function() {
      var _this;
      _this = this;
      $(".department-filter").unbind().on("click", function() {
        $(".department-label[data-department='" + $(this).data('department') + "']").css({
          "display": "inline-block"
        });
        $(".departments-container").hide();
        $("#departments-filters input[type='checkbox']").prop("checked", false);
        $("#departments-filters input[type='checkbox'][name='" + $(this).data("department") + "']").prop("checked", true);
        return _this.fetch();
      });
      return $(".close-department").unbind().on("click", function() {
        $(".department-label").hide();
        $("#departments-filters input[type='checkbox']").prop("checked", false);
        $(".departments-container").show();
        return _this.fetch();
      });
    },
    typeFilter: function() {
      var value;
      value = $("#type-filter input[type='radio']:checked").val();
      if (value === "all") {
        return null;
      } else {
        return value;
      }
    },
    departmentFilter: function() {
      var department;
      department = null;
      $("#departments-filters input[type='checkbox']").each(function() {
        if ($(this).is(":checked")) {
          department = $(this).attr("name");
          return false;
        }
      });
      return department;
    },
    addPatternTitle: function(pattern) {
      pattern = pattern.replace('{first}', '<span data-toggle="tooltip" data-placement="top" title="First name">{first}</span>').replace('{last}', '<span data-toggle="tooltip" data-placement="top" title="Last name">{last}</span>').replace('{f}', '<span data-toggle="tooltip" data-placement="top" title="First name initial">{f}</span>').replace('{l}', '<span data-toggle="tooltip" data-placement="top" title="Last name initial">{l}</span>');
      return pattern;
    },
    cleanSearchResults: function() {
      $(".search-placeholder").show();
      $(".search-results").html("");
      $(".people-search-container, .email-finder-results-container").hide();
      $(".departments").hide();
      return $("li.department").css("display", "none");
    },
    loadAccountInformation: function() {
      return Account.get(function(json) {
        if (json === 'none') {
          $('.account-loading').hide();
          return $('.account-not-logged').show();
        } else {
          $('.account-loading').hide();
          $('.account-calls-used').text(Utilities.numberWithCommas(json.data.calls.used));
          $('.account-calls-available').text(Utilities.numberWithCommas(json.data.calls.available));
          return $('.account-logged').show();
        }
      });
    },
    feedbackNotification: function() {
      chrome.storage.sync.get('calls_count', function(value) {
        if (value['calls_count'] >= 20) {
          return chrome.storage.sync.get('has_given_feedback', function(value) {
            if (typeof value['has_given_feedback'] === 'undefined') {
              return $('.feedback-notification').slideDown(300);
            }
          });
        }
      });
      $('#open-rate-notification').click(function() {
        $('.feedback-notification').slideUp(300);
        return $('.rate-notification').slideDown(300);
      });
      $('#open-contact-notification').click(function() {
        $('.feedback-notification').slideUp(300);
        return $('.contact-notification').slideDown(300);
      });
      return $('.feedback_link').click(function() {
        return chrome.storage.sync.set({
          'has_given_feedback': true
        });
      });
    }
  };
};

EmailFinder = function() {
  return {
    full_name: this.full_name,
    domain: this.domain,
    email: this.email,
    score: this.score,
    sources: this.sources,
    validateForm: function() {
      var _this;
      _this = this;
      $('#full-name-field').one('keyup', function(e) {
        return setTimeout((function() {
          if ($("#full-name-field").val().indexOf(" ") !== -1 && $("#full-name-field").val().length > 4) {
            if ($(".email-finder-result-container").is(":hidden") && $("#flash .alert-danger").length === 0 && typeof $("#full-name-field").data("bs.tooltip") === "undefined") {
              return $("#full-name-field").tooltip({
                title: "Press enter to find the email address."
              }).tooltip("show");
            }
          }
        }), 6000);
      });
      return $("#email-finder-search").unbind().submit(function() {
        if ($("#full-name-field").val().indexOf(" ") === -1 || $("#full-name-field").val().length <= 4) {
          $("#full-name-field").tooltip({
            title: "Please enter the full name of the person to find the email address."
          }).tooltip("show");
        } else {
          _this.submit();
        }
        return false;
      });
    },
    submit: function() {
      $(".email-finder-loader").show();
      this.domain = window.domain;
      this.full_name = $("#full-name-field").val();
      return this.fetch();
    },
    fetch: function() {
      var _this;
      this.cleanFinderResults();
      if (typeof $("#full-name-field").data("bs.tooltip") !== "undefined") {
        $("#full-name-field").tooltip("destroy");
      }
      _this = this;
      return $.ajax({
        url: Api.emailFinder(_this.domain, _this.full_name, window.api_key),
        headers: {
          'Email-Hunter-Origin': 'chrome_extension'
        },
        type: 'GET',
        data: {
          format: 'json'
        },
        dataType: 'json',
        jsonp: false,
        error: function(xhr, statusText, err) {
          $('.email-finder-loader').hide();
          if (xhr.status === 400) {
            return displayError('Sorry, something went wrong on the query.');
          } else if (xhr.status === 401) {
            return $('.connect-again-container').show();
          } else if (xhr.status === 403) {
            $('#domain-search').hide();
            return $('#blocked-notification').show();
          } else if (xhr.status === 429) {
            if (!_this.trial) {
              return Account.returnRequestsError(function(e) {
                return displayError(e);
              });
            } else {
              return $('.connect-container').show();
            }
          } else {
            return displayError(DOMPurify.sanitize(xhr.responseJSON["errors"][0]["details"]));
          }
        },
        success: function(result) {
          if (result.data.email === null) {
            $('.email-finder-loader').hide();
            return displayError('We didn\'t find the email address of this person.');
          } else {
            _this.domain = result.data.domain;
            _this.email = result.data.email;
            _this.score = result.data.score;
            _this.position = result.data.position;
            _this.company = result.data.company;
            _this.twitter = result.data.twitter;
            _this.linkedin = result.data.linkedin;
            _this.sources = result.data.sources;
            _this.first_name = Utilities.toTitleCase(result.data.first_name);
            _this.last_name = Utilities.toTitleCase(result.data.last_name);
            return _this.render();
          }
        }
      });
    },
    render: function() {
      var finder_html, lead, lead_button, s, template;
      $(".email-finder-loader").hide();
      if (this.score < 30) {
        this.confidence_score_class = "low-score";
      } else if (this.score > 70) {
        this.confidence_score_class = "high-score";
      } else {
        this.confidence_score_class = "average-score";
      }
      if ((this.position != null) && (this.company != null)) {
        this.title = this.position + " at " + this.company;
      } else if (this.position != null) {
        this.title = this.position + " at " + this.domain;
      } else if (this.company != null) {
        this.title = this.company;
      } else {
        this.title = this.domain;
      }
      if (this.sources.length > 0) {
        s = this.sources.length === 1 ? "" : "s";
        this.method = "We found this email address <strong>" + this.sources.length + "</strong> time" + s + " on the web.";
      } else {
        this.method = "This is our best guess for this person. We haven't found this email on the web.";
      }
      Handlebars.registerHelper('ifIsVerified', function(confidence, options) {
        if (confidence >= 95) {
          return options.fn(this);
        }
        return options.inverse(this);
      });
      Handlebars.registerHelper('md5', function(options) {
        return new Handlebars.SafeString(Utilities.MD5(options.fn(this)));
      });
      template = JST["src/browser_action/templates/email_finder.hbs"];
      finder_html = $(template(this));
      $(".email-finder-result-container").html(finder_html);
      $(".email-finder-result-container").slideDown(200);
      if (this.sources.length > 0) {
        $(".email-finder-result-sources").show();
      }
      $('[data-toggle="tooltip"]').tooltip();
      Utilities.copyEmailListener();
      $('.email-finder-result-pic img').on("load", function() {
        return $(this).css('opacity', '1');
      });
      lead_button = $(".email-finder-result-email .save_lead_button");
      lead_button.data({
        first_name: this.first_name,
        last_name: this.last_name,
        email: this.email,
        confidence_score: this.score
      });
      lead = new LeadButton;
      lead.saveButtonListener(lead_button);
      return lead.disableSaveLeadButtonIfLeadExists(lead_button);
    },
    cleanFinderResults: function() {
      $(".email-finder-result-container").html("");
      return $(".email-finder-result-container").hide();
    }
  };
};

LeadButton = function() {
  return {
    first_name: this.first_name,
    last_name: this.last_name,
    position: this.position,
    email: this.email,
    company: this.organization,
    website: window.domain,
    source: "Hunter (Domain Search)",
    phone_number: this.phone_number,
    linkedin_url: this.linkedin,
    twitter: this.twitter,
    saveButtonListener: function(selector) {
      var _this;
      _this = this;
      return $(selector).unbind("click").click(function() {
        var attributes, lead, lead_button;
        lead_button = $(this);
        lead = lead_button.data();
        lead_button.prop("disabled", true);
        lead_button.find(".fas").removeClass("fa-plus").addClass("fa-spin fa-spinner-third");
        lead_button.tooltip("destroy");
        attributes = ['first_name', 'last_name', 'position', 'email', 'company', 'website', 'source', 'phone_number', 'linkedin_url', 'twitter', 'email'];
        lead = {};
        attributes.forEach(function(attribute) {
          if (_this[attribute] === void 0) {
            return lead[attribute] = lead_button.data(attribute);
          } else {
            return lead[attribute] = _this[attribute];
          }
        });
        if (window.current_leads_list_id) {
          lead['leads_list_id'] = window.current_leads_list_id;
        }
        return _this.save(lead, lead_button);
      });
    },
    save: function(lead, button) {
      return $.ajax({
        url: Api.leads(api_key),
        headers: {
          'Email-Hunter-Origin': 'chrome_extension'
        },
        type: 'POST',
        data: lead,
        dataType: 'json',
        jsonp: false,
        error: function(xhr, statusText, err) {
          button.find(".fas").removeClass("fa-spin fa-spinner-third").addClass("fa-times");
          button.find(".lead_status").text("Failed");
          displayError(DOMPurify.sanitize(xhr.responseJSON["errors"][0]["details"]));
          if (xhr.status === 422) {
            return window.current_leads_list_id = void 0;
          }
        },
        success: function(response) {
          button.css({
            'border': '2px solid #60ad1d'
          });
          button.find('.fas').removeClass('fa-spin fa-spinner-third').addClass('fa-check').attr('Saved in your leads');
          return button.find(".lead_status").text("Saved");
        }
      });
    },
    disableSaveLeadButtonIfLeadExists: function(selector) {
      return $(selector).each(function() {
        var lead, lead_button;
        lead_button = $(this);
        lead = $(this).data();
        return $.ajax({
          url: Api.leadsExist(lead.email, window.api_key),
          headers: {
            'Email-Hunter-Origin': 'chrome_extension'
          },
          type: 'GET',
          data: {
            format: 'json'
          },
          dataType: 'json',
          jsonp: false,
          success: function(response) {
            if (response.data.id !== null) {
              lead_button.find('.fas').removeClass('fa-plus').addClass('fa-check').attr('title', 'Saved in your leads');
              lead_button.find(".lead_status").text("Saved");
              return lead_button.prop('disabled', true);
            }
          }
        });
      });
    }
  };
};

ListSelection = {
  appendSelector: function() {
    var _this;
    _this = this;
    return _this.getLeadsLists(function(json) {
      var selected_list_id;
      if (json !== 'none') {
        $('.list_select_container').html('<select class="list_select"></select>');
        if (window.current_leads_list_id) {
          selected_list_id = window.current_leads_list_id;
        } else {
          selected_list_id = json.data.leads_lists[0].id;
        }
        json.data.leads_lists.forEach(function(val, i) {
          var selected;
          if (parseInt(selected_list_id) === parseInt(val.id)) {
            selected = 'selected="selected"';
          } else {
            selected = '';
          }
          return $('.list_select').append('<option ' + selected + ' value="' + val.id + '">' + val.name + '</option>');
        });
        $('.view_list_link').attr('href', 'https://hunter.io/leads?leads_list_id=' + selected_list_id + '&utm_source=chrome_extension&utm_medium=chrome_extension&utm_campaign=extension&utm_content=browser_popup');
        $('.list_select').append('<option value="new_list">Create a new list...</option>');
        return _this.updateCurrent();
      }
    });
  },
  updateCurrent: function() {
    return $('.list_select').on('change', function() {
      if ($(this).val() === 'new_list') {
        return Utilities.openInNewTab('https://hunter.io/leads_lists/new?utm_source=chrome_extension&utm_medium=chrome_extension&utm_campaign=extension');
      } else {
        chrome.storage.sync.set({
          'current_leads_list_id': $(this).val()
        });
        window.current_leads_list_id = $(this).val();
        return $('.view_list_link').attr('href', 'https://hunter.io/leads?leads_list_id=' + $(this).val() + '&utm_source=chrome_extension&utm_medium=chrome_extension&utm_campaign=extension&utm_content=browser_popup');
      }
    });
  },
  getLeadsLists: function(callback) {
    return Account.getApiKey(function(api_key) {
      var url;
      if (api_key !== '') {
        url = 'https://api.hunter.io/v2/leads_lists?limit=100&api_key=' + api_key;
        return $.ajax({
          url: url,
          headers: {
            'Email-Hunter-Origin': 'chrome_extension'
          },
          type: 'GET',
          dataType: 'json',
          jsonp: false,
          success: function(json) {
            return callback(json);
          }
        });
      } else {
        return callback('none');
      }
    });
  }
};

displayError = function(html) {
  $('.error-message').html(html);
  $("html, body").animate({
    scrollTop: 0
  }, 300);
  $('.error-container').delay(300).slideDown();
  return setTimeout((function() {
    $('.error-container').slideUp();
  }), 8000);
};

chrome.tabs.query({
  active: true,
  currentWindow: true
}, function(tabs) {
  return Account.getApiKey(function(api_key) {
    var domainSearch, withoutSubDomain;
    window.api_key = api_key;
    window.domain = new URL(tabs[0].url).hostname.replace('www.', '');
    withoutSubDomain = Utilities.withoutSubDomain(window.domain);
    if (withoutSubDomain) {
      window.domain = withoutSubDomain;
    }
    if (window.domain === 'linkedin.com') {
      return $('#linkedin-notification').show();
    } else if (window.domain === '' || window.domain.indexOf('.') === -1) {
      return $('#empty-notification').show();
    } else {
      $('#domain-search').show();
      domainSearch = new DomainSearch;
      domainSearch.launch();
      domainSearch.loadAccountInformation();
      return chrome.storage.sync.get('current_leads_list_id', function(value) {
        window.current_leads_list_id = value.current_leads_list_id;
        return ListSelection.appendSelector();
      });
    }
  });
});
